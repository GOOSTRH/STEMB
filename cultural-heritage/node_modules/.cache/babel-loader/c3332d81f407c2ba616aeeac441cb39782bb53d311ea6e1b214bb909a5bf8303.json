{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\School etech\\\\cultural-heritage\\\\src\\\\components\\\\TextType.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState, createElement } from \"react\";\nimport { gsap } from \"gsap\";\nimport \"./TextType.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextType = ({\n  text,\n  as: Component = \"div\",\n  typingSpeed = 50,\n  initialDelay = 0,\n  pauseDuration = 2000,\n  deletingSpeed = 30,\n  loop = true,\n  className = \"\",\n  showCursor = true,\n  hideCursorWhileTyping = false,\n  cursorCharacter = \"|\",\n  cursorClassName = \"\",\n  cursorBlinkDuration = 0.5,\n  textColors = [],\n  variableSpeed,\n  onSentenceComplete,\n  startOnVisible = false,\n  reverseMode = false,\n  ...props\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\n  const [isVisible, setIsVisible] = useState(!startOnVisible);\n  const cursorRef = useRef(null);\n  const containerRef = useRef(null);\n  const textArray = Array.isArray(text) ? text : [text];\n  const getRandomSpeed = () => {\n    if (!variableSpeed) return typingSpeed;\n    const {\n      min,\n      max\n    } = variableSpeed;\n    return Math.random() * (max - min) + min;\n  };\n  const getCurrentTextColor = () => {\n    if (textColors.length === 0) return \"var(--accent-1)\";\n    return textColors[currentTextIndex % textColors.length];\n  };\n  useEffect(() => {\n    if (!startOnVisible || !containerRef.current) return;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n        }\n      });\n    }, {\n      threshold: 0.1\n    });\n    observer.observe(containerRef.current);\n    return () => observer.disconnect();\n  }, [startOnVisible]);\n  useEffect(() => {\n    if (showCursor && cursorRef.current) {\n      gsap.set(cursorRef.current, {\n        opacity: 1\n      });\n      gsap.to(cursorRef.current, {\n        opacity: 0,\n        duration: cursorBlinkDuration,\n        repeat: -1,\n        yoyo: true,\n        ease: \"power2.inOut\"\n      });\n    }\n  }, [showCursor, cursorBlinkDuration]);\n  useEffect(() => {\n    if (!isVisible) return;\n    let timeout;\n    const currentText = textArray[currentTextIndex];\n    const processedText = reverseMode ? currentText.split(\"\").reverse().join(\"\") : currentText;\n    const executeTypingAnimation = () => {\n      if (isDeleting) {\n        if (displayedText === \"\") {\n          setIsDeleting(false);\n          if (currentTextIndex === textArray.length - 1 && !loop) {\n            return;\n          }\n          if (onSentenceComplete) {\n            onSentenceComplete(textArray[currentTextIndex], currentTextIndex);\n          }\n          setCurrentTextIndex(prev => (prev + 1) % textArray.length);\n          setCurrentCharIndex(0);\n          timeout = setTimeout(() => {}, pauseDuration);\n        } else {\n          timeout = setTimeout(() => {\n            setDisplayedText(prev => prev.slice(0, -1));\n          }, deletingSpeed);\n        }\n      } else {\n        if (currentCharIndex < processedText.length) {\n          timeout = setTimeout(() => {\n            setDisplayedText(prev => prev + processedText[currentCharIndex]);\n            setCurrentCharIndex(prev => prev + 1);\n          }, variableSpeed ? getRandomSpeed() : typingSpeed);\n        } else if (textArray.length > 1) {\n          timeout = setTimeout(() => {\n            setIsDeleting(true);\n          }, pauseDuration);\n        }\n      }\n    };\n    if (currentCharIndex === 0 && !isDeleting && displayedText === \"\") {\n      timeout = setTimeout(executeTypingAnimation, initialDelay);\n    } else {\n      executeTypingAnimation();\n    }\n    return () => clearTimeout(timeout);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentCharIndex, displayedText, isDeleting, typingSpeed, deletingSpeed, pauseDuration, textArray, currentTextIndex, loop, initialDelay, isVisible, reverseMode, variableSpeed, onSentenceComplete]);\n  const shouldHideCursor = hideCursorWhileTyping && (currentCharIndex < textArray[currentTextIndex].length || isDeleting);\n  return /*#__PURE__*/createElement(Component, {\n    ref: containerRef,\n    className: `text-type ${className}`,\n    ...props\n  }, /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"text-type__content\",\n    style: {\n      color: getCurrentTextColor()\n    },\n    children: displayedText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this), showCursor && /*#__PURE__*/_jsxDEV(\"span\", {\n    ref: cursorRef,\n    className: `text-type__cursor ${cursorClassName} ${shouldHideCursor ? \"text-type__cursor--hidden\" : \"\"}`,\n    children: cursorCharacter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 7\n  }, this));\n};\n_s(TextType, \"D2drXCTyjUeTWWueuIIMRoRpv4U=\");\n_c = TextType;\nexport default TextType;\nvar _c;\n$RefreshReg$(_c, \"TextType\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useRef","useState","createElement","gsap","jsxDEV","_jsxDEV","TextType","text","as","Component","typingSpeed","initialDelay","pauseDuration","deletingSpeed","loop","className","showCursor","hideCursorWhileTyping","cursorCharacter","cursorClassName","cursorBlinkDuration","textColors","variableSpeed","onSentenceComplete","startOnVisible","reverseMode","props","displayedText","setDisplayedText","currentCharIndex","setCurrentCharIndex","isDeleting","setIsDeleting","currentTextIndex","setCurrentTextIndex","isVisible","setIsVisible","cursorRef","containerRef","textArray","Array","isArray","getRandomSpeed","min","max","Math","random","getCurrentTextColor","length","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","threshold","observe","disconnect","set","opacity","to","duration","repeat","yoyo","ease","timeout","currentText","processedText","split","reverse","join","executeTypingAnimation","prev","setTimeout","slice","clearTimeout","shouldHideCursor","ref","style","color","children","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/School etech/cultural-heritage/src/components/TextType.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useRef, useState, createElement } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport \"./TextType.css\";\r\n\r\nconst TextType = ({\r\n  text,\r\n  as: Component = \"div\",\r\n  typingSpeed = 50,\r\n  initialDelay = 0,\r\n  pauseDuration = 2000,\r\n  deletingSpeed = 30,\r\n  loop = true,\r\n  className = \"\",\r\n  showCursor = true,\r\n  hideCursorWhileTyping = false,\r\n  cursorCharacter = \"|\",\r\n  cursorClassName = \"\",\r\n  cursorBlinkDuration = 0.5,\r\n  textColors = [],\r\n  variableSpeed,\r\n  onSentenceComplete,\r\n  startOnVisible = false,\r\n  reverseMode = false,\r\n  ...props\r\n}) => {\r\n  const [displayedText, setDisplayedText] = useState(\"\");\r\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\r\n  const [isVisible, setIsVisible] = useState(!startOnVisible);\r\n  const cursorRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  const textArray = Array.isArray(text) ? text : [text];\r\n\r\n  const getRandomSpeed = () => {\r\n    if (!variableSpeed) return typingSpeed;\r\n    const { min, max } = variableSpeed;\r\n    return Math.random() * (max - min) + min;\r\n  };\r\n\r\n  const getCurrentTextColor = () => {\r\n    if (textColors.length === 0) return \"var(--accent-1)\";\r\n    return textColors[currentTextIndex % textColors.length];\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!startOnVisible || !containerRef.current) return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            setIsVisible(true);\r\n          }\r\n        });\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    observer.observe(containerRef.current);\r\n    return () => observer.disconnect();\r\n  }, [startOnVisible]);\r\n\r\n  useEffect(() => {\r\n    if (showCursor && cursorRef.current) {\r\n      gsap.set(cursorRef.current, { opacity: 1 });\r\n      gsap.to(cursorRef.current, {\r\n        opacity: 0,\r\n        duration: cursorBlinkDuration,\r\n        repeat: -1,\r\n        yoyo: true,\r\n        ease: \"power2.inOut\",\r\n      });\r\n    }\r\n  }, [showCursor, cursorBlinkDuration]);\r\n\r\n  useEffect(() => {\r\n    if (!isVisible) return;\r\n\r\n    let timeout;\r\n    const currentText = textArray[currentTextIndex];\r\n    const processedText = reverseMode\r\n      ? currentText.split(\"\").reverse().join(\"\")\r\n      : currentText;\r\n\r\n    const executeTypingAnimation = () => {\r\n      if (isDeleting) {\r\n        if (displayedText === \"\") {\r\n          setIsDeleting(false);\r\n          if (currentTextIndex === textArray.length - 1 && !loop) {\r\n            return;\r\n          }\r\n\r\n          if (onSentenceComplete) {\r\n            onSentenceComplete(textArray[currentTextIndex], currentTextIndex);\r\n          }\r\n\r\n          setCurrentTextIndex((prev) => (prev + 1) % textArray.length);\r\n          setCurrentCharIndex(0);\r\n          timeout = setTimeout(() => { }, pauseDuration);\r\n        } else {\r\n          timeout = setTimeout(() => {\r\n            setDisplayedText((prev) => prev.slice(0, -1));\r\n          }, deletingSpeed);\r\n        }\r\n      } else {\r\n        if (currentCharIndex < processedText.length) {\r\n          timeout = setTimeout(\r\n            () => {\r\n              setDisplayedText(\r\n                (prev) => prev + processedText[currentCharIndex]\r\n              );\r\n              setCurrentCharIndex((prev) => prev + 1);\r\n            },\r\n            variableSpeed ? getRandomSpeed() : typingSpeed\r\n          );\r\n        } else if (textArray.length > 1) {\r\n          timeout = setTimeout(() => {\r\n            setIsDeleting(true);\r\n          }, pauseDuration);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (currentCharIndex === 0 && !isDeleting && displayedText === \"\") {\r\n      timeout = setTimeout(executeTypingAnimation, initialDelay);\r\n    } else {\r\n      executeTypingAnimation();\r\n    }\r\n\r\n    return () => clearTimeout(timeout);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    currentCharIndex,\r\n    displayedText,\r\n    isDeleting,\r\n    typingSpeed,\r\n    deletingSpeed,\r\n    pauseDuration,\r\n    textArray,\r\n    currentTextIndex,\r\n    loop,\r\n    initialDelay,\r\n    isVisible,\r\n    reverseMode,\r\n    variableSpeed,\r\n    onSentenceComplete,\r\n  ]);\r\n\r\n  const shouldHideCursor =\r\n    hideCursorWhileTyping &&\r\n    (currentCharIndex < textArray[currentTextIndex].length || isDeleting);\r\n\r\n  return createElement(\r\n    Component,\r\n    {\r\n      ref: containerRef,\r\n      className: `text-type ${className}`,\r\n      ...props,\r\n    },\r\n    <span\r\n      className=\"text-type__content\"\r\n      style={{ color: getCurrentTextColor() }}\r\n    >\r\n      {displayedText}\r\n    </span>,\r\n    showCursor && (\r\n      <span\r\n        ref={cursorRef}\r\n        className={`text-type__cursor ${cursorClassName} ${shouldHideCursor ? \"text-type__cursor--hidden\" : \"\"}`}\r\n      >\r\n        {cursorCharacter}\r\n      </span>\r\n    )\r\n  );\r\n};\r\n\r\nexport default TextType;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}